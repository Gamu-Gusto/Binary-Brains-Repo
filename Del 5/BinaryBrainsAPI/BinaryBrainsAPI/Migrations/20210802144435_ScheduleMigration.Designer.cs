// <auto-generated />
using System;
using BinaryBrainsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BinaryBrainsAPI.Migrations
{
    [DbContext(typeof(ArtechDbContext))]
    [Migration("20210802144435_ScheduleMigration")]
    partial class ScheduleMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BinaryBrainsAPI.Entities.Exhibition", b =>
                {
                    b.Property<int>("ExhibitionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExhibitionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExhibitionDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExhibitionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExhibitionTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExhibitionTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Exhibition_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScheduleID")
                        .HasColumnType("int");

                    b.HasKey("ExhibitionID");

                    b.HasIndex("ExhibitionTypeID");

                    b.HasIndex("ScheduleID");

                    b.ToTable("Exhibition");
                });

            modelBuilder.Entity("BinaryBrainsAPI.Entities.Exhibitions.ExhibitionType", b =>
                {
                    b.Property<int>("ExhibitionTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExhibitionTypeDecription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExhibitionTypeID");

                    b.ToTable("ExhibitionType");
                });

            modelBuilder.Entity("BinaryBrainsAPI.Entities.Exhibitions.Schedule", b =>
                {
                    b.Property<int>("ScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ScheduleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScheduleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScheduleID");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("BinaryBrainsAPI.Entities.Exhibition", b =>
                {
                    b.HasOne("BinaryBrainsAPI.Entities.Exhibitions.ExhibitionType", "ExhibitionType")
                        .WithMany()
                        .HasForeignKey("ExhibitionTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BinaryBrainsAPI.Entities.Exhibitions.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExhibitionType");

                    b.Navigation("Schedule");
                });
#pragma warning restore 612, 618
        }
    }
}
